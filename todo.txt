machine 1:
- booleans
- integers
- strings
- streams
- environments
- if/else
- while, for, foreach
- console
- evaluate in isolated environment
- parser
- read rc from file

machine 2:
- multithreading
- queues
- signed capabilities
- framebuffer
- garbage collector
- garbage collector also compacts by progressively reallocating objects
- semaphores
- debug info in functions and variables
- log total value count

machine 3:
- "dump" function to serialise objects / whole system to a string
- device drivers
- mark objects as not present using pointer tagging, i.e. serialise to disk

system 1:
- repl
- map
- macros
- preprocess macros
- const-read macros, allow configurations to be read from files at compile time
- parser generates a map between environments and symbols

system 2:
- zoe drive format
- hat trick of running the operating system inside itself (emulate its own environment for each program)
- desktop environment
- display total value count as wallpaper

system 3:
- cache non-volatile expressions?
- compile c to lisp?